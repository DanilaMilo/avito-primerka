// Content script –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏ "–ü—Ä–∏–º–µ—Ä–∏—Ç—å" –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ê–≤–∏—Ç–æ

console.log('–ê–≤–∏—Ç–æ –ü—Ä–∏–º–µ—Ä–∫–∞: Content script –∑–∞–≥—Ä—É–∂–µ–Ω');

// –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
if (document.readyState === 'loading') {
  document.addEventListener('DOMContentLoaded', init);
} else {
  init();
}

function init() {
  console.log('–ê–≤–∏—Ç–æ –ü—Ä–∏–º–µ—Ä–∫–∞: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Ç–æ–≤–∞—Ä–∞
  if (!isProductPage()) {
    console.log('–ê–≤–∏—Ç–æ –ü—Ä–∏–º–µ—Ä–∫–∞: –ù–µ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Ç–æ–≤–∞—Ä–∞');
    return;
  }
  
  // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Ç–æ–≤–∞—Ä–∞
  waitForProductImages().then(() => {
    addTryOnButton();
    
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—å –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ DOM –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏
    observeDOMChanges();
  });
}

// –ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ DOM
function observeDOMChanges() {
  let checkInterval = null;
  
  // –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è –∫–Ω–æ–ø–∫–∏
  const checkButton = () => {
    if (isProductPage() && !document.querySelector('.avito-primerka-button')) {
      console.log('–ê–≤–∏—Ç–æ –ü—Ä–∏–º–µ—Ä–∫–∞: –ö–Ω–æ–ø–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –¥–æ–±–∞–≤–ª—è–µ–º');
      addTryOnButton();
    }
  };
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 500ms
  checkInterval = setInterval(checkButton, 500);
  
  // –¢–∞–∫–∂–µ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—å –¥–ª—è –±–æ–ª–µ–µ –±—ã—Å—Ç—Ä–æ–≥–æ —Ä–µ–∞–≥–∏—Ä–æ–≤–∞–Ω–∏—è
  const observer = new MutationObserver((mutations) => {
    let shouldReaddButton = false;
    
    mutations.forEach((mutation) => {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ —É–¥–∞–ª–∏–ª–∏ –Ω–∞—à—É –∫–Ω–æ–ø–∫—É –∏–ª–∏ –∏–∑–º–µ–Ω–∏–ª–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –≥–∞–ª–µ—Ä–µ–∏
      if (mutation.type === 'childList') {
        const removedNodes = Array.from(mutation.removedNodes);
        const hasOurButton = removedNodes.some(node => 
          node.nodeType === Node.ELEMENT_NODE && 
          (node.classList?.contains('avito-primerka-button') || 
           node.querySelector?.('.avito-primerka-button'))
        );
        
        if (hasOurButton) {
          console.log('–ê–≤–∏—Ç–æ –ü—Ä–∏–º–µ—Ä–∫–∞: –ö–Ω–æ–ø–∫–∞ –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞, –ø–µ—Ä–µ–¥–æ–±–∞–≤–ª—è–µ–º');
          shouldReaddButton = true;
        }
      }
    });
    
    if (shouldReaddButton) {
      // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º
      setTimeout(() => {
        if (isProductPage() && !document.querySelector('.avito-primerka-button')) {
          addTryOnButton();
        }
      }, 100);
    }
  });
  
  // –ù–∞–±–ª—é–¥–∞–µ–º –∑–∞ –≤—Å–µ–º –¥–æ–∫—É–º–µ–Ω—Ç–æ–º –¥–ª—è –±–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω–æ–≥–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
  observer.observe(document.body, {
    childList: true,
    subtree: true,
    attributes: false
  });
  
  console.log('–ê–≤–∏—Ç–æ –ü—Ä–∏–º–µ—Ä–∫–∞: –ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å DOM –∑–∞–ø—É—â–µ–Ω');
  
  // –û—á–∏—â–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–∏ —É—Ö–æ–¥–µ —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  window.addEventListener('beforeunload', () => {
    if (checkInterval) {
      clearInterval(checkInterval);
    }
    observer.disconnect();
  });
}

function isProductPage() {
  const url = window.location.href;
  const isAvito = window.location.hostname.includes('avito.ru');
  
  // –†–∞–∑–ª–∏—á–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã URL —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ –ê–≤–∏—Ç–æ
  const productPatterns = [
    /\/\d+$/,           // /1234567890
    /\/\d+\?/,          // /1234567890?param=value
    /\/\d+[a-zA-Z0-9_-]*$/, // /1234567890_abc
    /\/\d+[a-zA-Z0-9_-]*\?/ // /1234567890_abc?param=value
  ];
  
  const hasProductId = productPatterns.some(pattern => pattern.test(window.location.pathname));
  
  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ —ç–ª–µ–º–µ–Ω—Ç–∞–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  const hasProductElements = document.querySelector('[data-marker="item-view"]') || 
                            document.querySelector('[data-marker="item-view/image"]') ||
                            document.querySelector('[data-marker="item-view/gallery"]');
  
  console.log('–ê–≤–∏—Ç–æ –ü—Ä–∏–º–µ—Ä–∫–∞: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã', {
    url: url,
    hostname: window.location.hostname,
    pathname: window.location.pathname,
    isAvito: isAvito,
    hasProductId: hasProductId,
    hasProductElements: !!hasProductElements
  });
  
  return isAvito && (hasProductId || hasProductElements);
}

function waitForProductImages() {
  return new Promise((resolve) => {
    let attempts = 0;
    const maxAttempts = 50; // 5 —Å–µ–∫—É–Ω–¥ –º–∞–∫—Å–∏–º—É–º
    
    const checkImages = () => {
      attempts++;
      
      // –†–∞–∑–ª–∏—á–Ω—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
      const imageSelectors = [
        '[data-marker="item-view/image"]',
        '[data-marker="item-view/gallery"]',
        '[data-marker="image-frame/image-wrapper"]',
        '.gallery img',
        '.item-view img'
      ];
      
      let imageFound = false;
      for (const selector of imageSelectors) {
        const element = document.querySelector(selector);
        if (element && (element.querySelector('img') || element.tagName === 'IMG')) {
          imageFound = true;
          break;
        }
      }
      
      if (imageFound) {
        console.log('–ê–≤–∏—Ç–æ –ü—Ä–∏–º–µ—Ä–∫–∞: –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –Ω–∞–π–¥–µ–Ω—ã');
        resolve();
      } else if (attempts >= maxAttempts) {
        console.log('–ê–≤–∏—Ç–æ –ü—Ä–∏–º–µ—Ä–∫–∞: –¢–∞–π–º–∞—É—Ç –æ–∂–∏–¥–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π');
        resolve(); // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –¥–∞–∂–µ –±–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
      } else {
        setTimeout(checkImages, 100);
      }
    };
    checkImages();
  });
}

function addTryOnButton() {
  console.log('–ê–≤–∏—Ç–æ –ü—Ä–∏–º–µ—Ä–∫–∞: –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–Ω–æ–ø–∫–∞ –µ—â–µ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–∞
  if (document.querySelector('.avito-primerka-button')) {
    console.log('–ê–≤–∏—Ç–æ –ü—Ä–∏–º–µ—Ä–∫–∞: –ö–Ω–æ–ø–∫–∞ —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω–∞');
    return;
  }
  
  // –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º —Ç–æ–≤–∞—Ä–∞ –Ω–∞ –ê–≤–∏—Ç–æ
  const imageSelectors = [
    '[data-marker="item-view/gallery"]', // –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –≥–∞–ª–µ—Ä–µ–∏
    '[data-marker="image-frame/image-wrapper"]', // –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    '[data-marker="item-view/image"]',
    '.gallery-img',
    '.item-gallery',
    '.item-photos',
    '.item-view-image'
  ];
  
  let imageContainer = null;
  for (const selector of imageSelectors) {
    imageContainer = document.querySelector(selector);
    if (imageContainer) {
      console.log('–ê–≤–∏—Ç–æ –ü—Ä–∏–º–µ—Ä–∫–∞: –ù–∞–π–¥–µ–Ω –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è', selector);
      break;
    }
  }
  
  // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä, –∏—â–µ–º –ª—é–±–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
  if (!imageContainer) {
    const allImages = document.querySelectorAll('img');
    if (allImages.length > 0) {
      // –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
      imageContainer = allImages[0].closest('div');
      console.log('–ê–≤–∏—Ç–æ –ü—Ä–∏–º–µ—Ä–∫–∞: –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—â–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä');
    }
  }
  
  if (!imageContainer) {
    console.log('–ê–≤–∏—Ç–æ –ü—Ä–∏–º–µ—Ä–∫–∞: –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω');
    return;
  }
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º relative –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
  imageContainer.style.position = 'relative';
  
  // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É
  const button = document.createElement('button');
  button.className = 'avito-primerka-button';
  button.innerHTML = `
    <span class="avito-primerka-icon">üõçÔ∏è</span>
    <span class="avito-primerka-text">–ü—Ä–∏–º–µ—Ä–∏—Ç—å</span>
  `;
  
  // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
  button.addEventListener('click', handleTryOnClick);
  
  // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
  imageContainer.appendChild(button);
  
  console.log('–ê–≤–∏—Ç–æ –ü—Ä–∏–º–µ—Ä–∫–∞: –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è');
}

function handleTryOnClick(event) {
  event.preventDefault();
  event.stopPropagation();
  
  console.log('–ê–≤–∏—Ç–æ –ü—Ä–∏–º–µ—Ä–∫–∞: –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –ø—Ä–∏–º–µ—Ä–∫–∏');
  
  // –û—Ç–∫—Ä—ã–≤–∞–µ–º popup —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
  chrome.runtime.sendMessage({
    action: 'openPopup'
  });
}

function getProductData() {
  console.log('–ê–≤–∏—Ç–æ –ü—Ä–∏–º–µ—Ä–∫–∞: –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Ç–æ–≤–∞—Ä–µ');
  
  // –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–∞
  const titleSelectors = [
    '[data-marker="item-view/title"]',
    'h1[data-marker="item-view/title"]',
    '.item-title',
    'h1'
  ];
  
  let title = '';
  for (const selector of titleSelectors) {
    const element = document.querySelector(selector);
    if (element && element.textContent) {
      title = element.textContent.trim();
      break;
    }
  }
  
  // –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã –¥–ª—è —Ü–µ–Ω—ã
  const priceSelectors = [
    '[data-marker="item-view/price"]',
    '.item-price',
    '[data-marker="item-view/price-value"]'
  ];
  
  let price = '';
  for (const selector of priceSelectors) {
    const element = document.querySelector(selector);
    if (element && element.textContent) {
      price = element.textContent.trim();
      break;
    }
  }
  
  // –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è
  const descriptionSelectors = [
    '[data-marker="item-view/description"]',
    '.item-description',
    '.item-description-text'
  ];
  
  let description = '';
  for (const selector of descriptionSelectors) {
    const element = document.querySelector(selector);
    if (element && element.textContent) {
      description = element.textContent.trim();
      break;
    }
  }
  
  // –ü–æ–ª—É—á–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ - –ø—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã –¥–ª—è –ê–≤–∏—Ç–æ
  const imageSelectors = [
    '[data-marker="image-frame/image-wrapper"] img', // –û—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    '[data-marker="image-preview/item"] img', // –ü—Ä–µ–≤—å—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    '[data-marker="item-view/image"] img',
    '.gallery-img img',
    '.item-gallery img',
    '.item-photos img'
  ];
  
  let images = [];
  for (const selector of imageSelectors) {
    const elements = document.querySelectorAll(selector);
    if (elements.length > 0) {
      images = Array.from(elements).map(img => ({
        src: img.src,
        alt: img.alt || ''
      }));
      console.log('–ê–≤–∏—Ç–æ –ü—Ä–∏–º–µ—Ä–∫–∞: –ù–∞–π–¥–µ–Ω—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —á–µ—Ä–µ–∑ —Å–µ–ª–µ–∫—Ç–æ—Ä', selector, images.length);
      break;
    }
  }
  
  // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ª—é–±—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
  if (images.length === 0) {
    const allImages = document.querySelectorAll('img');
    images = Array.from(allImages)
      .filter(img => img.src && !img.src.includes('data:') && !img.src.includes('logo'))
      .slice(0, 5)
      .map(img => ({
        src: img.src,
        alt: img.alt || ''
      }));
  }
  
  // –ü–æ–ª—É—á–∞–µ–º —Ç–∏–ø —Ç–æ–≤–∞—Ä–∞ –∏–∑ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫
  const productTypeSelectors = [
    '[data-marker="item-view/item-params"] li:first-child p',
    '[data-marker="item-view/item-params"] li:first-child span',
    '.item-params li:first-child p',
    '.item-params li:first-child span'
  ];
  
  let productType = '';
  for (const selector of productTypeSelectors) {
    const element = document.querySelector(selector);
    if (element && element.textContent) {
      const text = element.textContent.trim();
      if (text.includes('–¢–∏–ø —Ç–æ–≤–∞—Ä–∞')) {
        productType = text.replace('–¢–∏–ø —Ç–æ–≤–∞—Ä–∞:', '').trim();
        break;
      }
    }
  }
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞
  const category = detectCategory(title, description);
  
  const productData = {
    title,
    price,
    description,
    images,
    category,
    productType,
    url: window.location.href
  };
  
  console.log('–ê–≤–∏—Ç–æ –ü—Ä–∏–º–µ—Ä–∫–∞: –î–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–∞', productData);
  
  return productData;
}

function detectCategory(title, description) {
  // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º –∏–∑–≤–ª–µ—á—å —Ç–∏–ø —Ç–æ–≤–∞—Ä–∞ –∏–∑ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫
  const itemParams = document.querySelector('[data-marker="item-view/item-params"]');
  let productType = '';
  
  if (itemParams) {
    // –ò—â–µ–º –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç —Å —Ç–∏–ø–æ–º —Ç–æ–≤–∞—Ä–∞
    const typeElement = itemParams.querySelector('li:first-child p');
    if (typeElement) {
      const typeText = typeElement.textContent;
      const typeMatch = typeText.match(/–¢–∏–ø —Ç–æ–≤–∞—Ä–∞:\s*(.+)/);
      if (typeMatch) {
        productType = typeMatch[1].trim();
        console.log('–ê–≤–∏—Ç–æ –ü—Ä–∏–º–µ—Ä–∫–∞: –ù–∞–π–¥–µ–Ω —Ç–∏–ø —Ç–æ–≤–∞—Ä–∞ –∏–∑ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫:', productType);
      }
    }
  }
  
  // –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
  const text = (title + ' ' + description + ' ' + productType).toLowerCase();
  
  console.log('–ê–≤–∏—Ç–æ –ü—Ä–∏–º–µ—Ä–∫–∞: –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:', text);
  
  // –î–µ—Ç–µ–∫—Ü–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
  if (text.includes('–¥–∏—Å–∫') || text.includes('–∫–æ–ª–µ—Å') || text.includes('—à–∏–Ω–∞') || text.includes('—Ä–µ–∑–∏–Ω–∞') || text.includes('–∞–≤—Ç–æ')) {
    return 'auto';
  }
  
  if (text.includes('—Ñ—É—Ç–±–æ–ª–∫–∞') || text.includes('–¥–∂–∏–Ω—Å—ã') || text.includes('–ø–ª–∞—Ç—å–µ') || text.includes('–∫—É—Ä—Ç–∫–∞') || text.includes('–æ–±—É–≤—å') || text.includes('–æ–¥–µ–∂–¥–∞') || text.includes('–≥–æ–ª–æ–≤–Ω—ã–µ —É–±–æ—Ä—ã') || text.includes('—à–∞–ø–∫–∞') || text.includes('–∫–µ–ø–∫–∞') || text.includes('—à–ª—è–ø–∞') || text.includes('–±–µ—Ä–µ—Ç')) {
    return 'clothing';
  }
  
  if (text.includes('—Ç–µ–ª–µ—Ñ–æ–Ω') || text.includes('–Ω–æ—É—Ç–±—É–∫') || text.includes('–ø–ª–∞–Ω—à–µ—Ç') || text.includes('–Ω–∞—É—à–Ω–∏–∫–∏') || text.includes('—ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞')) {
    return 'electronics';
  }
  
  if (text.includes('—Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫') || text.includes('—Å—Ç–∏—Ä–∞–ª—å–Ω–∞—è') || text.includes('–º–∏–∫—Ä–æ–≤–æ–ª–Ω–æ–≤–∫–∞') || text.includes('–ø—ã–ª–µ—Å–æ—Å') || text.includes('–±—ã—Ç–æ–≤–∞—è —Ç–µ—Ö–Ω–∏–∫–∞')) {
    return 'home_appliances';
  }
  
  // –ú–µ–±–µ–ª—å
  if (text.includes('—Å—Ç–æ–ª') || text.includes('—Å—Ç—É–ª') || text.includes('–¥–∏–≤–∞–Ω') || text.includes('–∫—Ä–æ–≤–∞—Ç—å') || text.includes('—à–∫–∞—Ñ') || text.includes('–º–µ–±–µ–ª—å')) {
    return 'furniture';
  }
  
  // –°–ø–æ—Ä—Ç
  if (text.includes('—Å–ø–æ—Ä—Ç') || text.includes('—Ç—Ä–µ–Ω–∞–∂–µ—Ä') || text.includes('–≤–µ–ª–æ—Å–∏–ø–µ–¥') || text.includes('–ª—ã–∂–∏')) {
    return 'sports';
  }
  
  // –ö–Ω–∏–≥–∏
  if (text.includes('–∫–Ω–∏–≥–∞') || text.includes('–∂—É—Ä–Ω–∞–ª') || text.includes('—É—á–µ–±–Ω–∏–∫')) {
    return 'books';
  }
  
  return 'other';
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç popup
chrome.runtime.onMessage.addListener((request, sender, sendResponse) => {
  console.log('–ê–≤–∏—Ç–æ –ü—Ä–∏–º–µ—Ä–∫–∞: –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ', request);
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ ping –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–≤—è–∑–∏
  if (request.action === 'ping') {
    console.log('–ê–≤–∏—Ç–æ –ü—Ä–∏–º–µ—Ä–∫–∞: Ping –ø–æ–ª—É—á–µ–Ω, –æ—Ç–≤–µ—á–∞–µ–º pong');
    sendResponse({ pong: true, timestamp: Date.now() });
    return true;
  }
  
  if (request.action === 'getProductImage') {
    // –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ –ê–≤–∏—Ç–æ
    const imageSelectors = [
      '[data-marker="image-frame/image-wrapper"] img', // –û—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
      '[data-marker="image-preview/item"] img', // –ü—Ä–µ–≤—å—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
      '[data-marker="item-view/image"] img',
      '.gallery-img img',
      '.item-gallery img',
      '.item-photos img'
    ];
    
    let imgElement = null;
    for (const selector of imageSelectors) {
      const img = document.querySelector(selector);
      if (img && img.src) {
        imgElement = img;
        console.log('–ê–≤–∏—Ç–æ –ü—Ä–∏–º–µ—Ä–∫–∞: –ù–∞–π–¥–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ —Å–µ–ª–µ–∫—Ç–æ—Ä', selector);
        break;
      }
    }
    
    // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏, –±–µ—Ä–µ–º –ø–µ—Ä–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    if (!imgElement) {
      const allImages = document.querySelectorAll('img');
      for (const img of allImages) {
        if (img.src && !img.src.includes('data:') && !img.src.includes('logo')) {
          imgElement = img;
          console.log('–ê–≤–∏—Ç–æ –ü—Ä–∏–º–µ—Ä–∫–∞: –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ');
          break;
        }
      }
    }
    
    if (imgElement) {
      // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ base64
      convertImageToBase64(imgElement).then(base64 => {
        console.log('–ê–≤–∏—Ç–æ –ü—Ä–∏–º–µ—Ä–∫–∞: –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ –≤ base64');
        sendResponse({
          success: true,
          imageUrl: base64,
          originalUrl: imgElement.src
        });
      }).catch(error => {
        console.error('–ê–≤–∏—Ç–æ –ü—Ä–∏–º–µ—Ä–∫–∞: –û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è', error);
        sendResponse({
          success: false,
          error: error.message,
          imageUrl: imgElement.src, // Fallback –∫ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º—É URL
          originalUrl: imgElement.src
        });
      });
      return true; // –£–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ –æ—Ç–≤–µ—Ç –±—É–¥–µ—Ç –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–º
    } else {
      console.log('–ê–≤–∏—Ç–æ –ü—Ä–∏–º–µ—Ä–∫–∞: –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
      sendResponse({
        success: false,
        error: '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ',
        imageUrl: null,
        originalUrl: null
      });
    }
  }
  
  if (request.action === 'detectCategory') {
    const productData = getProductData();
    console.log('–ê–≤–∏—Ç–æ –ü—Ä–∏–º–µ—Ä–∫–∞: –ö–∞—Ç–µ–≥–æ—Ä–∏—è —Ç–æ–≤–∞—Ä–∞', productData.category);
    sendResponse({
      category: productData.category
    });
  }
  
  if (request.action === 'getProductData') {
    try {
      const productData = getProductData();
      console.log('–ê–≤–∏—Ç–æ –ü—Ä–∏–º–µ—Ä–∫–∞: –î–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–∞ –¥–ª—è popup', productData);
      sendResponse({
        success: true,
        productData: productData
      });
    } catch (error) {
      console.error('–ê–≤–∏—Ç–æ –ü—Ä–∏–º–µ—Ä–∫–∞: –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–∞:', error);
      sendResponse({
        success: false,
        error: error.message
      });
    }
  }
});

// –§—É–Ω–∫—Ü–∏—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ base64
// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
const IMAGE_OPTIMIZATION = {
  maxWidth: 1024,        // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —à–∏—Ä–∏–Ω–∞
  maxHeight: 1024,       // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –≤—ã—Å–æ—Ç–∞
  quality: 0.8,          // –ö–∞—á–µ—Å—Ç–≤–æ JPEG (0.1 - 1.0)
  maxFileSize: 500000,   // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –≤ –±–∞–π—Ç–∞—Ö (500KB)
  enableOptimization: true // –í–∫–ª—é—á–∏—Ç—å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é
};

function optimizeImageSize(width, height, maxWidth, maxHeight) {
  if (width <= maxWidth && height <= maxHeight) {
    return { width, height };
  }
  
  const ratio = Math.min(maxWidth / width, maxHeight / height);
  return {
    width: Math.round(width * ratio),
    height: Math.round(height * ratio)
  };
}

function convertImageToBase64(imgElement) {
  return new Promise((resolve, reject) => {
    try {
      // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ fetch
      fetch(imgElement.src, {
        mode: 'cors',
        credentials: 'omit'
      }).then(response => {
        if (!response.ok) {
          throw new Error(`HTTP ${response.status}: ${response.statusText}`);
        }
        return response.blob();
      }).then(blob => {
        // –°–æ–∑–¥–∞–µ–º URL –¥–ª—è blob
        const blobUrl = URL.createObjectURL(blob);

        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        const img = new Image();
        img.crossOrigin = 'anonymous';

        img.onload = () => {
          try {
            // –°–æ–∑–¥–∞–µ–º canvas
            const canvas = document.createElement('canvas');
            const ctx = canvas.getContext('2d');

            // –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã
            const originalWidth = img.naturalWidth || img.width;
            const originalHeight = img.naturalHeight || img.height;
            
            console.log('–ê–≤–∏—Ç–æ –ü—Ä–∏–º–µ—Ä–∫–∞: –ò—Å—Ö–æ–¥–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', originalWidth, 'x', originalHeight);

            // –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º —Ä–∞–∑–º–µ—Ä—ã –µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–∞ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è
            let finalWidth = originalWidth;
            let finalHeight = originalHeight;
            
            if (IMAGE_OPTIMIZATION.enableOptimization) {
              const optimized = optimizeImageSize(originalWidth, originalHeight, IMAGE_OPTIMIZATION.maxWidth, IMAGE_OPTIMIZATION.maxHeight);
              finalWidth = optimized.width;
              finalHeight = optimized.height;
              console.log('–ê–≤–∏—Ç–æ –ü—Ä–∏–º–µ—Ä–∫–∞: –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã:', finalWidth, 'x', finalHeight);
            }

            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã canvas
            canvas.width = finalWidth;
            canvas.height = finalHeight;

            // –†–∏—Å—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ canvas —Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π
            ctx.drawImage(img, 0, 0, finalWidth, finalHeight);

            // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ base64 —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –∫–∞—á–µ—Å—Ç–≤–∞
            const base64 = canvas.toDataURL('image/jpeg', IMAGE_OPTIMIZATION.quality);

            // –û—á–∏—â–∞–µ–º URL
            URL.revokeObjectURL(blobUrl);

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
            const fileSize = (base64.length * 3) / 4; // –ü—Ä–∏–º–µ—Ä–Ω—ã–π —Ä–∞–∑–º–µ—Ä –≤ –±–∞–π—Ç–∞—Ö
            console.log('–ê–≤–∏—Ç–æ –ü—Ä–∏–º–µ—Ä–∫–∞: –†–∞–∑–º–µ—Ä base64:', Math.round(fileSize / 1024), 'KB');
            
            if (fileSize > IMAGE_OPTIMIZATION.maxFileSize) {
              console.warn('–ê–≤–∏—Ç–æ –ü—Ä–∏–º–µ—Ä–∫–∞: –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –ª–∏–º–∏—Ç:', Math.round(fileSize / 1024), 'KB >', Math.round(IMAGE_OPTIMIZATION.maxFileSize / 1024), 'KB');
            }

            console.log('–ê–≤–∏—Ç–æ –ü—Ä–∏–º–µ—Ä–∫–∞: –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ –≤ base64, —Ä–∞–∑–º–µ—Ä:', base64.length);
            resolve(base64);

          } catch (error) {
            URL.revokeObjectURL(blobUrl);
            throw error;
          }
        };

        img.onerror = () => {
          URL.revokeObjectURL(blobUrl);
          throw new Error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è');
        };

        img.src = blobUrl;

      }).catch(error => {
        console.error('–ê–≤–∏—Ç–æ –ü—Ä–∏–º–µ—Ä–∫–∞: –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —á–µ—Ä–µ–∑ fetch:', error);

        // Fallback: –ø—Ä–æ–±—É–µ–º –ø—Ä—è–º–æ–π —Å–ø–æ—Å–æ–±
        try {
          const canvas = document.createElement('canvas');
          const ctx = canvas.getContext('2d');

          const originalWidth = imgElement.naturalWidth || imgElement.width;
          const originalHeight = imgElement.naturalHeight || imgElement.height;
          
          // –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º —Ä–∞–∑–º–µ—Ä—ã
          let finalWidth = originalWidth;
          let finalHeight = originalHeight;
          
          if (IMAGE_OPTIMIZATION.enableOptimization) {
            const optimized = optimizeImageSize(originalWidth, originalHeight, IMAGE_OPTIMIZATION.maxWidth, IMAGE_OPTIMIZATION.maxHeight);
            finalWidth = optimized.width;
            finalHeight = optimized.height;
          }

          canvas.width = finalWidth;
          canvas.height = finalHeight;

          ctx.drawImage(imgElement, 0, 0, finalWidth, finalHeight);
          const base64 = canvas.toDataURL('image/jpeg', IMAGE_OPTIMIZATION.quality);

          console.log('–ê–≤–∏—Ç–æ –ü—Ä–∏–º–µ—Ä–∫–∞: Fallback –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞');
          resolve(base64);

        } catch (fallbackError) {
          console.error('–ê–≤–∏—Ç–æ –ü—Ä–∏–º–µ—Ä–∫–∞: Fallback —Ç–∞–∫–∂–µ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª:', fallbackError);
          reject(fallbackError);
        }
      });

    } catch (error) {
      console.error('–ê–≤–∏—Ç–æ –ü—Ä–∏–º–µ—Ä–∫–∞: –û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', error);
      reject(error);
    }
  });
}

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –∑–∞–≥—Ä—É–∑–∫–∏
window.avitoPrimerkaLoaded = true;

console.log('–ê–≤–∏—Ç–æ –ü—Ä–∏–º–µ—Ä–∫–∞: Content script –≥–æ—Ç–æ–≤');
